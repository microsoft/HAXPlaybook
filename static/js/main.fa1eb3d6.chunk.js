(this["webpackJsonphax-playbook-react"]=this["webpackJsonphax-playbook-react"]||[]).push([[0],{23:function(e){e.exports=JSON.parse('{"surveyInstructions":{"title":"Describe your AI feature","message":""},"taskInstructions":{"title":"Test these scenarios","message":""},"questions":[{"name":"systemDomain","category":"Correct operation","choices":[{"name":"search","definition":"A search system locates items that correspond to user-specified keywords, phrases, or characters.","examples":[{"name":"","details":"<ul> <li>Search engines, such as Bing, generate matching results (e.g., a movie title) along with contextually relevant information (e.g., showtimes) based on the user\'s current location and time. </li> <li>An in-app search feature, such as Microsoft Search in Office products, allows users to quickly find application-specific information, from commands or help to recently used files and more.</li> </ul>"}],"taskCard":{"tasks":[{"name":"Normal operation","details":"As usual, include scenarios where the system demonstrates normal operation."}]}},{"name":"recommendation","definition":"A recommendation system makes preferred-content suggestions, sometimes by predicting the user\u2019s rating of the content.","examples":[{"name":"","details":"<ul> <li>Playlist generators for video and music services like Netflix, YouTube, and Spotify.</li> <li>Product recommender services, such as Amazon.</li> <li>Contextual assistant services such as, <a href=\\"#\\" data-toggle=\\"tooltip\\" data-placement=\\"top\\" title=\\"Meeting Insights by Microsoft Outlook is an intelligent assistant that suggests meeting related information, including content presented during the meeting, sent meeting notes, and other relevant post-meeting material.\\">Meeting Insights</a></li> </ul>"}],"taskCard":{"tasks":[{"name":"Normal operation","details":" As usual, include scenarios where the system demonstrates normal operation."}]}},{"name":"conversational_ai","definition":"Conversational agents interact with people through one or more exchanges of natural-language dialogue, similar to conversing with a person.","examples":[{"name":"","details":"<ul> <li>Voice assistants for productivity management or home automation, like Cortana, Siri, and Alexa. </li> <li>Chatbots for customer support on e-commerce websites.</li> </ul>"}],"taskCard":{"tasks":[{"name":"Normal operation","details":" As usual, include scenarios where the system demonstrates normal operation. "}]}},{"name":"text_prediction_and_assistance","definition":"Text prediction and writing assistants help with the writing process, including research, grammar, tone, and localization.","examples":[{"name":"","details":"<ul> <li>Predicting the next set of words based on the user\'s input.</li> <li>Providing corrections for spelling, grammar, and punctuation mistakes.</li> <li>Making suggestions for similar words, paraphrases, and alternative expressions.</li> </ul>"}],"taskCard":{"tasks":[{"name":"Normal operation","details":" As usual, include scenarios where the system demonstrates normal operation."}]}},{"name":"classification","definition":"Text or document classification categorizes text in groups organized by predefined labels.","examples":[{"name":"","details":"<ul> <li>Spam filters in email applications, such as Microsoft Outlook.</li> </ul>"}],"taskCard":{"tasks":[{"name":"Normal operation","details":" As usual, include scenarios where the system demonstrates normal operation."}]}}]},{"name":"inputModality","instructions":"Please make a selection to see more information about your <a href=\\"#\\" data-toggle=\\"tooltip\\" data-placement=\\"top\\" title=\\"Although your system may have multiple input modalities, you should select the input that will be processed by the AI system.\\">primary</a> input modality.","category":"Input errors","choices":[{"name":"text","definition":"The system operates on text that a person types, or on text-bearing documents.","examples":[{"name":"","visibleIf":"{systemDomain} = \'search\'","details":"A search engine that accepts written queries and then retrieves relevant documents."},{"name":"","visibleIf":"{systemDomain} = \'recommendation\'","details":"A news recommendation service that recommends news stories based on the topics and news narratives a person is known to have followed in the past."},{"name":"","visibleIf":"{systemDomain} = \'conversational_ai\'","details":"A chatbot that communicates with people over a text channel such as instant messaging or email."},{"name":"","visibleIf":"{systemDomain} = \'text_prediction_and_assistance\'","details":"<p>A text auto-complete feature that uses keystrokes predict the rest of a person\'s input. Specific examples include:</p? <ul><li>Search auto-complete in Bing.com</li><li>Predictive text in Outlook email</li><li>Smart Compose in GMail</li></ul>"},{"name":"","visibleIf":"{systemDomain} = \'classification\'","details":"A system that organizes emails, or other communications, into categories like: spam, promotions/marketing, social media, etc."}],"taskCard":{"message":"Your system will take text as its primary input modality. Here are some scenarios to consider including in your user-testing protocol.","tasks":[{"name":"Spelling error results in wrong input","details":"<p>Spelling mistakes are a common source of text input errors, including missing letters, accidental letter additions, or swapping and replacing letters. Here are some ways to simulate spelling errors:</p><ul> <li>Use a word scrambler to switch the position of any two adjacent letters.</li> <li>Use any of these four techniques to manipulate the user\'s utterance. <ul> <li><b>Truncation</b>: removing a vowel or consonant from a word (e.g., le<u>t</u>er instead of le<u>tt</u>er)</li> <li><b>Substitution</b>: replacing a vowel or consonant with another in their respective position in the word (e.g., fi<u>m</u>ite instead of fi<u>n</u>ite)</li> <li><b>Insertion</b>: adding an extra vowel or consonant to a word (e.g., mis<u>s</u>take instead of mistake)</li> <li><b>Swapping</b>: switching positions between two adjacent letters (e.g., rec<u>ie</u>ved instead of rec<u>ei</u>ved)</li> </ul> </li> </ul>"}]}},{"name":"speech","definition":"The system operates on speech that a person speaks into a microphone, or on audio recordings.","examples":[{"name":"","visibleIf":"{systemDomain} = \'search\'","details":"Search systems that are integrated into voice assistants enable users to retrieve information by entering speech queries."},{"name":"","visibleIf":"{systemDomain} = \'recommendation\'","details":"<p>Recommender systems that are integrated into voice assistants enable users to explore relevant information by entering speech queries.</p> <ul> <li>Home-based voice assistants, such as Amazon Echo, provide recommendations for music, recipes, or audio books.</li> </ul>"},{"name":"","visibleIf":"{systemDomain} = \'conversational_ai\'","details":"A voice assistant is a user interface that allows a user to complete an action or retrieve information simply by speaking a command."}],"taskCard":{"message":"Your system will take <b>speech</b> as its primary input modality. Here are some scenarios to consider including in your user-testing protocol.","tasks":[{"name":"Transcription","details":"<p>Transcription errors are common in systems that rely on speech recognition.</p> <p>Simulate transcription errors by:</p> <ul> <li>Using an automated speech-to-text transcriber to convert user\'s utterance to text.</li> <li>Using any of the four techniques to manipulate the user\'s utterance. <ul> <li><b>Truncation</b>: removing inflected endings (e.g., \\"-ing\\", \\"-s\\", \\"-ed\\") or articles (\\"the\\")</li> <li><b>Substitution</b>: replacing utterance with a homo-phone/-nym, or words that share the same pronunciation, regardless of spelling.</li> <li><b>Insertion</b>: adding inflected endings (e.g., \\"-ing\\", \\"-s\\", \\"-ed\\")</li> <li><b>Extension</b>: splitting inflected endings (\\"-s\\") from words (\\"cats\\") to add a new word (e.g., cat<u>s</u> -> cat <u>s</u>it)</li> </ul> </li> </ul>"},{"name":"Noisy channel","details":"<p> User input is corrupted by background noise, including by capturing other people who may be speaking in the background.</p> <p>Simulate this error by including unrelated text in the transcription, or by removing portions of correctly transcribed text.</p>"}]}}]},{"name":"trigger","instructions":"Select a response to see more information.","category":"Trigger errors","choices":[{"name":"yes","definition":"The system is triggered by a button, or has some other clear signal that is unlikely to be misinterpreted.","examples":[{"name":"","visibleIf":"{inputModality} = \'text\'","details":"<p>A system that processes text input only after a person clicks a button (e.g., \\"Submit\\", \\"Send\\", etc.), or keystroke (e.g., \\"Enter\\", \\"Return\\").</p>"},{"name":"","visibleIf":"{inputModality} = \'speech\'","details":"<p>A virtual assistant that is activated by pressing a button rather than by speaking a wake-word (e.g., \\"Hey Cortana,\\", \\"Alexa\\", \\"etc. \\").</p>"}],"taskCard":{"message":"Your system will have a clear way of knowing when to <b>trigger</b>.","tasks":[]}},{"name":"no","definition":"Your system must decide for itself, under uncertainty, whether to trigger.","examples":[{"name":"","visibleIf":"{inputModality} = \'text\'","details":"A scheduling assistant that must decide if an email mentions setting up a meeting."},{"name":"","visibleIf":"{inputModality} = \'speech\'","details":"A virtual assistant that must decide if a sound captured by the microphone contains a \\"wake word\\"."}],"taskCard":{"message":"<p>Any uncertainty in knowing when to invoke the intelligent feature can sometimes result in triggering wrongfully, or triggering the system too early or too often.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"Missed trigger","details":"<p>The system fails to detect a valid triggering event.</p> <p>Simulate this error by intentionally ignoring a triggering event and continuing to process input as if no trigger had occurred. Consider simulating this error at different rates to better understand how the triggering false-negative rate impacts the interaction.</p>"},{"name":"Spurious trigger","details":"<p>The system triggers in the absence of a valid triggering event (it triggers when not intended).</p> <p>Simulate this error by triggering the system unexpectedly. Consider simulating this error at different rates to better understand how the triggering false-positive rate impacts the interaction.</p>"},{"name":"Delayed trigger","details":"<p>The system detects a valid triggering event but responds too late to be useful. This reflects a trade-off between waiting for more data to increase confidence versus needing to be responsive.</p> <p>Simulate this error by artificially inserting a short delay between the user\u2019s input and the system\u2019s output. Experiment with the different delay lengths to better understand the abovementioned trade-off.</p>"}]}}]},{"name":"delimiter","instruction":"When the system begins the activation process, it will also need to have a clear way of <a href=\\"#\\" class=\\"toolTip\\" data-toggle=\\"tooltip\\" data-placement=\\"top\\" title=\\"A delimiter is a sequence of one or more characters or events for specifying when a system should finish receiving the user\'s input.\\">delimiting</a> the user\'s input. Select a response to see more information.","category":"Delimiter errors","choices":[{"name":"yes","definition":"It is clear both where the user\u2019s input starts and end ends.","examples":[{"name":"","visibleIf":"{inputModality} = \'text\'","details":"<p>The user\u2019s input is wholly contained in a text or form field.</p>"},{"name":"","visibleIf":"{inputModality} = \'speech\'","details":"<p>The system is expected to process all speech contained in an audio recording (e.g., a transcription or captioning service).</p>"}],"taskCard":{"message":"<p>Your system will have a clear way of <b>delimiting</b> the user\'s input.</p>","tasks":[]}},{"name":"no","definition":"There is a risk of capturing too much or too little because the system must decide where input starts and/or ends. ","examples":[{"name":"","visibleIf":"{inputModality} = \'text\'","details":"Systems that process text one sentence at a time must first differentiate between internal punctuation (e.g., \\"Mr.\\", \\"Yahoo!\\") and punctuation that terminates the sentence."},{"name":"","visibleIf":"{inputModality} = \'speech\'","details":"<p>A voice-based virtual assistant that needs to decide when the user has stopped speaking before processing their request. For example, if a person speaks: \\"<i>How is the weather <u>[pause]</u> in Redmond, Washington?</i>\\", there is a risk that the agent will not process the words following the pause, and will return the weather for the wrong location."}],"taskCard":{"message":"<p>Your system will occasionally produce errors when there is uncertainty in determining when the user\'s input has started or ended.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"Truncation","details":"<p>The system begins capturing input too late or stops capturing input too early, and thus acts only on partial input.</p> <p>Simulate this error by intentionally leaving out the first or last words of user input.</p>"},{"name":"Overcapture","details":"<p>The system begins capturing input too early or stops capturing input too late, and thus acts on spurious data.</p> <p>Simulate this error by intentionally including extra words at the start or end of input.</p>"}]}}]},{"name":"interpretation","instructions":"Select a response to see more information.","category":"Response generation errors","choices":[{"name":"yes","definition":"Multiple interpretations can exist when there is no clear signal to help the system disambiguate similar or identical input of text or speech utterance.","examples":[{"name":"","details":"<p>A searcher looking for information on the \\"US Open\\" might want results about golf or for tennis. Likewise, a request for the weather in Cambridge could be interpreted as Cambridge, Massachusetts, or Cambridge, United Kingdom.</p>"},{"name":"","details":"<p>Consider verbally asking for a reminder to \\"email Paul about the meeting next week\\". Here, \\"next week\\" could indicate the timing of the reminder (i.e., \\"remind me next week\\"), or it could indicate the subject of the email (i.e., it is about \\"next week\u2019s meeting\\")</p>"}],"taskCard":{"message":"<p>There may be several valid interpretations of a user\'s input, and the system may fail to correctly resolve ambiguities. Consider testing the following scenario:</p>","tasks":[{"name":"Ambiguities","details":"<p>Include one ambiguous scenario in your testing.</p><p>Simulate such errors by intentionally leaving inputs ambiguous (e.g., failing to specify AM/PM when specifying times, or including homonyms/homophones) and then forcing the system to choose the wrong interpretation for a given scenario.</p>"}]}},{"name":"no","definition":"Given the user\'s input, it\'s completely clear how the system should respond.","examples":[{"name":"","details":"<p>Formulating highly specific queries can lead to very few or only one valid interpretation(s) of the user\'s input. The query in the following example would result in only one valid interpretation because the day, time, and location is specified:</p> <ul> <li>How is the weather <u>tomorrow</u> in <u>Seattle, Washington</u> from <u>1 to 2 p.m.</u>?</li> </ul>"}],"taskCard":{"message":"","tasks":[]}}]},{"name":"responseType","instructions":"Select a response to see more information","category":"Response generation errors","choices":[{"name":"single_response","definition":"Your system will produce a single response if only one valid response is available, or if time-, screen-, or usability-related constraints allow for only one.","examples":[{"name":"","details":"Advanced chatbot systems can generate short blurbs of text in interactive conversations by building on the tone and relevant topics detected from user utterances."},{"name":"","details":"<p>A single response to a question related to weather might include:</p> <ul> <li>It is 81 degrees Fahrenheit.</li> </ul>"},{"name":"","details":"Advanced writing assistants often generate a single response to suggest a paraphrase or sentence that eliminates a grammatical error or redundant information."}],"taskCard":{"message":"","tasks":[]}},{"name":"ranked_list","definition":"Your system will produce a ranked list in order of contextual relevance to user needs if multiple valid responses are available.","examples":[]},{"name":"action_execution","definition":"Performing an action is a common response type for systems that generate nonverbal cues","examples":[{"name":"","details":"<ul> <li>Displaying a screen or opening a new application.</li> <li>Performing physical actions, such as emitting light or vibrotactile feedback.</li> </ul>"}],"taskCard":{"message":"<p>Your system will perform an <b>action</b>. Failure to understand the user\'s intent or context can result in precision or recall errors when performing an action execution. </p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"No understanding","details":"<p>The system fails to map the user\'s input to any known action or response category and thus takes no action. This is when, for example, a virtual assistant might be expected to respond \\"I\'m sorry, I don\'t understand that question.\\"</p><p> Simulate this error by intentionally returning a non-answer response to a valid, well-formed input.</p>"},{"name":"Misunderstanding","details":"<p>The system maps the user\'s input to the wrong action or response category. For example, a shopping agent might incorrectly interpret a user\'s refund request for an item exchange request.</p><p>Simulate this error by intentionally processing a user\'s input with the wrong intent or action category.</p>"},{"name":"Partial understanding","details":"<p>Although your system has the correct interpretation of an intent, it could potentially incorrectly resolve details or assign incorrect attributes (e.g., wrong time zone) to a certain component of the input.</p> <p>Simulate this error by replacing a default attribute (e.g., Pacific Standard Time) that is originally assigned to the component (e.g., 1:00 p.m.) that you specify.</p> <ol> <li>Choose a certain component that you want your system to manipulate.</li> <li>Attach a unique identifier to the component of an input signal.</li> <li>Use the identifier to replace a default attribute that is assigned to the component.</li> <li>(Optional) Use a randomizer to replace a default attribute at a variable rate or a fixed rate that you specify.</li> </ol>"}]}}]},{"name":"responseMechanism","instructions":"Select a response to see more information.","category":"Response generation errors","choices":[{"name":"generated","definition":"Automated response generation transforms structured data into natural language to generate new content.","examples":[{"name":"","details":"Email reply prediction systems use automated response generation to suggest a list of phrases for beginning a reply email."}],"taskCard":{"message":"<p>Your system will <b>generate</b> a ranked list. List items can be automatically generated (instead of selected) and presented in ranked order. However, failure to understand user\'s intent or context can result in precision, recall, and ranking errors.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"Implausible or incoherent response","visibleIf":"{responseType} = \'single_response\'","details":"<p>Your system could respond in a way that is obviously incorrect, perhaps because the response is implausible or incoherent.</p><p>Simulate this error by composing the first few words of a correct answer, then using a predictive keyboard (or similar unsophisticated language model) to automatically fill in the rest of the sentence.</p>"},{"name":"Plausible but incorrect response","visibleIf":"{responseType} = \'single_response\'","details":"<p>Your system could respond in a way that seems plausible but is nonetheless providing incorrect information.</p><p>Simulate this error by composing an incorrect response to the user\'s question by making up key numbers or details rather than relying on reliable sources.</p>"},{"name":"Inappropriate response","visibleIf":"{responseType} = \'single_response\'","details":"<p>Your system may generate an answer that is inappropriate and may violate social norms.</p> <p>Care must be taken when simulating such errors. Consider including a scenario where the response includes non-specific placeholders such as \\"[EXPLETIVE]\\", or  \\"[CLASS STEROTYPE]\\" to indicate the possibility of such errors."},{"name":"Results include implausible or incoherent items","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Your system\'s results could include items that are obviously incorrect, implausible, or incoherent.</p><p>Simulate this error adding incoherent items to the result list. Incoherent items can be generated by composing the first few words of a correct answer, then using a predictive keyboard (or similar unsophisticated language model) to automatically fill in the rest of the sentence.</p>"},{"name":"Results include plausible but incorrect items","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Your system\'s results could include items that are plausible but incorrect.</p><p>Simulate this error by including incorrect but plausible responses in the result list. Plausibly incorrect responses can be generated by making up key numbers or details when generating responses, rather than relying on reliable sources.</p>"},{"name":"Results include inappropriate items","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Your system\'s results could include items that are inappropriate and may violate social norms.</p> <p>Care must be taken when simulating such errors. Consider including items that employ non-specific placeholders such as \\"[EXPLETIVE]\\", or  \\"[CLASS STEROTYPE]\\" to indicate the possibility of such errors."},{"name":"Poor ranking","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor ranking occurs when the order of items in the results list does not match an intended natural order (e.g., of relevance, probability, or importance)</p><p>Simulate this error by shuffling or reversing the order of the ranked list.</p>"},{"name":"Low result diversity","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor result diversity occurs when all the results in the list are similar to one another.</p><p>Simulate this situation by adding near-duplicate items to the ranked results.</p>"}]}},{"name":"selected","definition":"Response selection from a list of candidate responses is suited for applications that rely on content from a database with minimal or no modifications applied to the response.","examples":[{"name":"","details":"<ul> <li>Search engine results comprise a list of several web pages in the order of a predetermined ranked index.</li> <li>In-app search results, such as files, commands, or help documentation, are listed in order of recency or transitional probability.</li> </ul>"},{"name":"","details":"<ul> <li>List of recommended products in e-commerce websites are ranked in order of conditional probability that a user will purchase an item.</li> <li>List of recommended music or video content in playlist generators are ranked in order of likelihood that a user will consume the content.</li> </ul>"},{"name":"","details":"<ul> <li>Customer support for e-commerce websites, in which users are provided multiple options to return or exchange a purchased item.</li> <li>Navigating insurance policy quotes, in which users are provided several different pricing options based on insurance coverage and deductibles.</li> </ul>"},{"name":"","details":"<ul> <li>Predictive text suggests a set of words that the user will type with high probability, given some preceding text.</li> <li>Spell checkers suggest a list of correctly spelled words that are closest to the one that is intended in writing.</li> </ul>"}],"taskCard":{"message":"<p>Your system will <b>select</b> list items from an existing set. However, failure to understand user\'s intent or context can result in precision, recall, and ranking errors.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"Wrong item","visibleIf":"{responseType} = \'single_response\'","details":"<p>The system may return the wrong item from the corpus.</p> <p>Simulate this error by randomly selecting an item from the corpus and returning it instead of the intended item.</p>"},{"name":"Poor precision","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor precision occurs when the result list includes many non-relevant results.</p> <p>Simulate this error by randomly selecting items from the corpus and <b>adding</b> them to the results list. Be sure not to remove any items the user may need to complete their task. Experiment both with the number of random items to include, and with the positions where they appear.</p>"},{"name":"Poor recall","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor recall occurs when the result list excludes relevant results.</p><p>Simulate this low recall by intentionally leaving out key results, perhaps going so far as to prevent the user from completing their task.</p>"},{"name":"Poor ranking","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor ranking occurs when the order of items in the results list does not match an intended natural order (e.g., of relevance, probability, or importance)</p><p>Simulate this error by shuffling or reversing the order of the ranked list.</p>"},{"name":"Low result diversity","visibleIf":"{responseType} = \'ranked_list\'","details":"<p>Poor result diversity occurs when all the results in the list are similar to one another.</p><p>Simulate this situation by adding near-duplicate items to the set of items being ranked, and then including a scenario where these items all appear in the ranked results.</p>"}]}}]},{"name":"responseClassification","instructions":"Select a response to see more information.","category":"Response generation errors","choices":[{"name":"binary","definition":"Binary classification is the task of classifying datapoints of a given set into two categories.","examples":[{"name":"","details":"Email spam filters apply binary classification rules to determine whether to label an email as junk."}],"taskCard":{"message":"<p>Your system will perform a <b>binary</b> classification.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"System produces a false negative.","details":"<p>False negatives comprise one outcome of a binary classification task.</p> <p>Simulate this error by assigning a negative label (e.g., not a meeting request) to a data point when it should been positive (e.g., meeting request).</p>"},{"name":"System produces a false positive","details":"<p>False positives comprise another outcome of a binary classification task.</p> <p>Simulate this error by assigning a positive label (e.g., meeting request) to a data point when it should been negative (e.g., not a meeting request).</p>"}]}},{"name":"multiple","definition":"Multi-class is the task of classifying datapoints into one of three or more categories.","examples":[{"name":"Multi-class classification","details":"Multi-class is the task of classifying datapoints into one of three or more categories."},{"name":"Example","details":"<p>Scheduling assistants apply multi-classification rules to label incoming email based on its content. Some of these multi-class categories include:</p> <ul> <li>Meeting requests</li> <li>Important messages</li> <li>Confidential messages</li> </ul>"}],"taskCard":{"message":"<p>Your system will perform a <b>multi-class</b> classification.</p> <p>Here are some scenarios to consider including in your user-testing protocol.</p>","tasks":[{"name":"System fails to produce correct classifications among close categories","details":"<p>Your system could potentially confuse two similar but different categories, leading to a classification error.</p> <p>Simulate this error in the following ways:</p> <ol> <li>Identify two or more data points that share similar features (e.g., meeting summary vs. meeting request).</li> <li>Assign same classification to those data points.</li> </ol>"},{"name":"System fails to produce correct classifications among distant categories","details":"<p>Your system could also confuse two distant categories.</p> <p>Simulate this error in the following ways:</p> <ol> <li>Identify two or more data points that share minimal features (e.g., To-do list vs. meeting request).</li> <li>Assign same classification to those data points.</li> </ol>"}]}}]}]}')},47:function(e){e.exports=JSON.parse('{"showQuestionNumbers":"off","showProgressBar":"off","goNextPageAutomatic":false,"showNavigationButtons":true,"showCompletedPage":false,"pages":[{"elements":[{"type":"radiogroup","name":"systemDomain","title":"Which of these systems is closest to what you are designing?","choices":[{"value":"search","text":"Search"},{"value":"recommendation","text":"Recommendation"},{"value":"conversational_ai","text":"Conversational AI"},{"value":"text_prediction_and_assistance","text":"Text prediction and assistance"},{"value":"classification","text":"Classification"}]},{"type":"radiogroup","name":"inputModality","title":"What is the primary input modality for your {systemDomain} system?","visibleIf":"{systemDomain} notempty","choices":[{"value":"text","visibleIf":"{systemDomain} notempty","text":"Text"},{"value":"speech","visibleIf":"{systemDomain} = \'search\' or {systemDomain} = \'recommendation\' or {systemDomain} = \'conversational_ai\' or {systemDomain} = \'other\'","text":"Speech"},{"value":"action_sequence","visibleIf":"{systemDomain} = \'recommendation\' or {systemDomain} = \'classification\' or {systemDomain} = \'other\'","text":"Action sequence"}]},{"type":"radiogroup","name":"trigger","title":"Will your {systemDomain} system have a clear way of knowing when it should trigger?","visibleIf":"{inputModality} notempty","choices":[{"value":"yes","text":"Yes, it will have a clear way of knowing when to trigger"},{"value":"no","text":"No, it will not have a clear way of knowing when to trigger"}]},{"type":"radiogroup","name":"delimiter","title":"When activated, will your {systemDomain} system have a clear way of delimiting the user\'s input?","visibleIf":"{trigger} notempty","choices":[{"value":"yes","text":"Yes, it will have a clear way of delimiting the user\'s input"},{"value":"no","text":"No, it will not have a clear way of delimiting the user\'s input"}]},{"type":"radiogroup","name":"interpretation","title":"Will there be multiple valid interpretations of the user\'s input?","visibleIf":"{delimiter} notempty","choices":[{"value":"yes","text":"Yes, there will be multiple valid interpretations of the user\'s input"},{"value":"no","text":"No, there is only one valid interpretation of the user\'s input"}]},{"type":"radiogroup","name":"responseType","title":"What form does the output take?","visibleIf":"{interpretation} notempty and ({systemDomain}=\'search\' or {systemDomain}=\'recommendation\' or {systemDomain}=\'conversational_ai\' or {systemDomain}=\'text_prediction_and_assistance\' or {systemDomain}=\'other\')","choices":[{"value":"single_response","visibleIf":"{systemDomain} = \'search\' or {systemDomain}=\'recommendation\' or {systemDomain}=\'conversational_ai\' or {systemDomain}=\'text_prediction_and_assistance\' or {systemDomain}=\'other\'","text":"Single response"},{"value":"ranked_list","visibleIf":"{systemDomain}=\'search\' or {systemDomain}=\'recommendation\' or {systemDomain}=\'conversational_ai\' or {systemDomain}=\'text_prediction_and_assistance\' or {systemDomain}=\'other\'","text":"Ranked list"},{"value":"action_execution","visibleIf":"{systemDomain}=\'conversational_ai\' or {systemDomain}=\'other\'","text":"Action execution"}]},{"type":"radiogroup","name":"responseMechanism","title":"How is the system\'s response produced?","visibleIf":"{responseType} = \'single_response\' or {responseType} = \'ranked_list\'","choices":[{"value":"generated","visibleIf":"{systemDomain} <> \'search\' and {systemDomain} <> \'recommendation\'","text":"Generated"},{"value":"selected","text":"Selected from an existing set"}]},{"type":"radiogroup","name":"responseClassification","title":"How many classifications are there?","visibleIf":"{interpretation} notempty and {systemDomain} = \'classification\'","choices":[{"value":"binary","text":"Binary classification"},{"value":"multiple","text":"Multi-class classification"}]}]}]}')},58:function(e,t,i){},59:function(e,t,i){},86:function(e,t,i){"use strict";i.r(t);var s=i(1),n=i(0),a=i.n(n),o=i(19),r=i.n(o),l=(i(57),i(58),i(59),i(15)),c=i(26),u=i(4),m=i(13),d=function(e){var t=e.introduction,i=e.onStartClick;return Object(s.jsxs)("div",{className:"my-5",children:[Object(s.jsx)("div",{dangerouslySetInnerHTML:{__html:t}}),Object(s.jsx)("button",{className:"btn btn-primary",onClick:i,children:"Start"})]})},p=i(8),h=i(22),g=i(23),f=i(90);var y,b=function(){function e(t,i,s,n){Object(p.a)(this,e),this.title=void 0,this.message=void 0,this.question=void 0,this.id=void 0,this.tasks=void 0,this.title=t,this.message=i,this.tasks=n,this.question=s,this.id=Object(f.a)()}return Object(h.a)(e,null,[{key:"fromQuestionChoice",value:function(t,i){var s=function(e,t){if(null==e||null==t)return null;var i=g.questions.find((function(t){return t.name===e}));return t=t.toString(),null==i?(console.log("Could not find question %s in content.json",e),null):null==i.choices?(console.log("Missing choices array for question %s",e),null):i.choices.find((function(e){return e.name===t}))}(t,i);if(null==s||null==s.taskCard||null==s.taskCard.tasks)return console.log("Null taskcard for question %s choice %s",t,i),null;var n=s.taskCard.tasks.map((function(e){return new v(e.name,e.details,e.visibleIf)}));return new e(s.taskCard.title,s.taskCard.message,t,n)}},{key:"filterTasks",value:function(t){if(y){var i=y.getAllValues(),s=y.getFilteredProperties(),n=[];return t.forEach((function(t){var a=t.tasks.filter((function(e){var t;return new m.ConditionRunner(null!==(t=e.visibleIf)&&void 0!==t?t:"true").run(i,s)}));n.push(new e(t.title,t.message,t.question,a))})),n}return t}}]),e}(),v=function e(t,i,s){Object(p.a)(this,e),this.name=void 0,this.details=void 0,this.visibleIf=void 0,this.id=void 0,this.name=t,this.details=i,this.visibleIf=s,this.id=Object(f.a)()},x=function(e){var t=e.card,i=null!=t.message&&t.message.length>0;return Object(s.jsxs)("div",{className:"normal-text",children:[i?Object(s.jsx)("div",{className:"my-3",dangerouslySetInnerHTML:{__html:t.message}}):null,0!==t.tasks.length?Object(s.jsx)("div",{children:t.tasks.map((function(e){return Object(s.jsxs)("div",{className:"task-card",children:[Object(s.jsx)("span",{className:"bold-text",children:e.name}),Object(s.jsx)("div",{dangerouslySetInnerHTML:{__html:e.details}})]},e.id)}))}):null]})},w=i(20),j=function(e){var t,i,o=e.taskMap,r=e.category,l=Object(n.useState)(!0),c=Object(u.a)(l,2),m=c[0],d=c[1],p=b.filterTasks(null!==(t=o.get(r))&&void 0!==t?t:[]),h=null!==(i=p.map((function(e){return e.tasks.length})).reduce((function(e,t){return e+t})))&&void 0!==i?i:0,g=null!=p.find((function(e){return!!e.message}));return h>0||g?Object(s.jsxs)(a.a.Fragment,{children:[Object(s.jsxs)("div",{className:"scenario-bar my-3",onClick:function(){return d(!m)},children:[m?Object(s.jsx)(w.b,{}):Object(s.jsx)(w.c,{}),Object(s.jsx)("span",{className:"scenario-bar-text",children:r}),Object(s.jsx)("div",{className:"circle-text circle-text-small",children:h})]}),m?p.map((function(e){return Object(s.jsx)(x,{card:e},e.id)})):null]}):null},k=function(e){var t=e.taskMap,i=Array.from(t.keys());return Object(s.jsx)("div",{style:{marginBottom:"3rem"},children:i.map((function(e){return Object(s.jsx)(j,{taskMap:t,category:e})}))})},O=function(e){var t=e.title;return Object(s.jsx)(a.a.Fragment,{children:Object(s.jsx)("div",{className:"my-3 column-header",children:Object(s.jsx)("span",{children:t})})})},S=i(89),I=i(91),C=i(48),T=i(49),_=function(e){var t=e.taskMap,i=e.numTasks,a=e.showForm,o=e.hideForm,r=Object(n.useState)(""),m=Object(u.a)(r,2),d=m[0],p=m[1],h=Object(n.useState)(""),g=Object(u.a)(h,2),f=g[0],y=g[1],v=Object(n.useState)(""),x=Object(u.a)(v,2),w=x[0],j=x[1],k=Object(n.useState)(0),O=Object(u.a)(k,2),_=O[0],A=O[1],N=Object(n.useState)(Array()),D=Object(u.a)(N,2),M=D[0],q=D[1],E=Array.from(t.keys()),P=function(){var e=new(C.a.plugin(T.a))({auth:d,throttle:{onRateLimit:function(e,t,i){if(i.log.warn("Request quota exhausted for request ".concat(t.method," ").concat(t.url)),0===t.request.retryCount)return i.log.info("Retrying after ".concat(e," seconds!")),!0},onAbuseLimit:function(e,t,i){i.log.warn("Abuse detected for request ".concat(t.method," ").concat(t.url))}}});var s,n=function(){var e=0;return function(){e+=1,A(Math.ceil(e/i*100))}}(),a=Object(l.a)(E);try{for(a.s();!(s=a.n()).done;){var o,r,u=s.value,m=b.filterTasks(null!==(o=t.get(u))&&void 0!==o?o:[]),p=Object(l.a)(m);try{for(p.s();!(r=p.n()).done;){var h,g=r.value,y=Object(l.a)(g.tasks);try{var v=function(){var t=h.value,i="".concat(u,": ").concat(t.name);e.issues.create({owner:f,repo:w,title:i,body:t.details}).then((function(){console.log("Issue creation succeded",i)})).catch((function(e){console.log("Issue creation failed",e),q([].concat(Object(c.a)(M),[e]))})).finally((function(){n()}))};for(y.s();!(h=y.n()).done;)v()}catch(x){y.e(x)}finally{y.f()}}}catch(x){p.e(x)}finally{p.f()}}}catch(x){a.e(x)}finally{a.f()}};return Object(s.jsxs)(S.a,{show:a,onHide:function(){return o()},children:[Object(s.jsx)(S.a.Header,{closeButton:!0,children:Object(s.jsx)(S.a.Title,{children:"Github Export"})}),Object(s.jsxs)(S.a.Body,{children:[Object(s.jsxs)("div",{children:[Object(s.jsx)("p",{children:"This form will export your survey results to issues on your GitHub repository."}),Object(s.jsxs)("p",{children:["Go to the ",Object(s.jsx)("a",{href:"https://github.com/settings/tokens",children:"token section of GitHub Developer Settings"})," to generate a personal access token."]})]}),Object(s.jsxs)("form",{onSubmit:P,children:[Object(s.jsxs)("label",{children:["Repo owner: ",Object(s.jsx)("input",{type:"text",value:f,onChange:function(e){return y(e.target.value)}})]}),Object(s.jsxs)("label",{children:["Repo name: ",Object(s.jsx)("input",{type:"text",value:w,onChange:function(e){return j(e.target.value)}})]}),Object(s.jsxs)("label",{children:["Personal access token: ",Object(s.jsx)("input",{type:"text",value:d,onChange:function(e){return p(e.target.value)}})]})]}),_>0?Object(s.jsxs)(s.Fragment,{children:[Object(s.jsxs)("span",{children:[_,"% complete"]}),Object(s.jsx)(I.a,{variant:"info",now:_})]}):null,M.map((function(e){return Object(s.jsxs)("div",{style:{color:"red"},children:["[Error] ","".concat(e)]})}))]}),Object(s.jsxs)(S.a.Footer,{children:[Object(s.jsx)("button",{className:"blue-button",onClick:function(){return o()},children:"Close"}),Object(s.jsx)("button",{className:"blue-button",onClick:P,children:"Export"})]})]})},A=i(46);var N=function(e){var t,i,a,o,r=e.surveyData,p=e.contentData,h=Object(n.useState)(!0),g=Object(u.a)(h,2),f=g[0],v=g[1],x=Object(n.useState)(new Array),j=Object(u.a)(x,2),S=j[0],I=j[1],C=Object(n.useState)(!1),T=Object(u.a)(C,2),N=T[0],D=T[1];console.log("STATE: showIntro=",f," undo=",S);if(Object(n.useEffect)((function(){if(!f){var e=document.getElementById("title-bar"),t=document.getElementById("grid-container"),i=document.getElementById("footer");t&&(t.style.height="calc(100vh - ".concat(null===i||void 0===i?void 0:i.offsetHeight,"px - ").concat(null===e||void 0===e?void 0:e.offsetHeight,"px)"));var s=document.getElementsByClassName("sv_row");if(s.length>0&&s[s.length-1].scrollIntoView(!0),"true"===new URLSearchParams(window.location.search).get("autoScrollScenarios")){var n=document.getElementsByClassName("task-card");n.length>0&&n[n.length-1].scrollIntoView(!0)}}})),f){var M=p;if(null!=M.introduction&&0!==M.introduction.length)return Object(s.jsx)("div",{className:"row justify-content-center",children:Object(s.jsx)(d,{introduction:M.introduction,onStartClick:function(){return v(!1)}})});v(!1)}var q=function(e){var t,i,s=null!==(t=null===(i=y)||void 0===i?void 0:i.getAllQuestions())&&void 0!==t?t:[],n=new Map;return s.forEach((function(t){var i=b.fromQuestionChoice(t.name,t.value);if(null!=i){var s,a=null===(s=e.questions.find((function(e){return e.name===t.name})))||void 0===s?void 0:s.category,o=n.get(a);if(o){var r=o.filter((function(e){return e.question!==t.name}));r.push(i),o=r}else o=[i];n.set(a,o)}})),n}(p),E=null===(t=p.surveyInstructions)||void 0===t?void 0:t.title,P=null===(i=p.surveyInstructions)||void 0===i?void 0:i.message,H=null===(a=p.taskInstructions)||void 0===a?void 0:a.title,F=null===(o=p.taskInstructions)||void 0===o?void 0:o.message,Y=Array.from(q.keys()),R=0===Y.length?0:Y.map((function(e){var t;return b.filterTasks(null!==(t=q.get(e))&&void 0!==t?t:[])})).flat().map((function(e){return e.tasks})).map((function(e){return e.length})).reduce((function(e,t){return e+t}));return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsxs)("div",{id:"title-bar",className:"title-bar",children:[Object(s.jsx)("span",{children:"HAX Playbook"}),Object(s.jsxs)("div",{className:"title-circle-container",children:[Object(s.jsx)("button",{title:"Undo",onClick:function(){if(null!=y){var e=y.getAllQuestions();if(e.forEach((function(e){e.clearValue()})),S.length>1){S.pop();var t=S[S.length-1];e.forEach((function(e){e.value=null===t||void 0===t?void 0:t.get(e.name)})),I(Object(c.a)(S))}else I([])}else console.log("Can't undo: surveyModel is undefined")},disabled:0===S.length,className:"circle-text circle-text-large undo-button",children:Object(s.jsx)(w.a,{})}),Object(s.jsx)("div",{className:"circle-text circle-text-large",children:R})]})]}),Object(s.jsxs)("div",{id:"grid-container",className:"grid-container",children:[Object(s.jsx)("div",{className:"left-column",children:Object(s.jsx)("div",{className:"my-3 column-header",children:Object(s.jsx)("span",{children:E})})}),Object(s.jsx)("div",{className:"right-column",children:Object(s.jsx)(O,{title:H})}),Object(s.jsx)("div",{className:"left-column",children:Object(s.jsx)("div",{className:"mb-3 normal-text",dangerouslySetInnerHTML:{__html:P}})}),Object(s.jsx)("div",{className:"right-column",children:Object(s.jsx)("div",{className:"mb-3 normal-text",dangerouslySetInnerHTML:{__html:F}})}),Object(s.jsx)("div",{className:"left-column",children:Object(s.jsx)("button",{onClick:function(){null!=y?y.getAllQuestions().forEach((function(e){e.clearValue()})):console.log("Can't clear: surveyModel is undefined")},className:"blue-button",children:"Start over"})}),Object(s.jsxs)("div",{className:"right-column d-flex justify-content-end",children:[Object(s.jsx)("button",{onClick:function(){var e,t="Work Item Type,Title,Description\n",i=Object(l.a)(Y);try{for(i.s();!(e=i.n()).done;){var s,n,a=e.value,o=null!==(s=q.get(a))&&void 0!==s?s:[],r=Object(l.a)(o);try{for(r.s();!(n=r.n()).done;){var c,u=n.value,m=Object(l.a)(u.tasks);try{for(m.s();!(c=m.n()).done;){var d=c.value,p=d.name.replaceAll(/"/g,'""'),h=d.details.replaceAll(/"/g,'""');t+='"Issue","'.concat(a,": ").concat(p,'","').concat(h,'"\n')}}catch(f){m.e(f)}finally{m.f()}}}catch(f){r.e(f)}finally{r.f()}}}catch(f){i.e(f)}finally{i.f()}var g=new Blob([t],{type:"text/csv"});Object(A.saveAs)(g,"scenarios.csv")},className:"blue-button",children:"Export to ADO"}),Object(s.jsx)("button",{onClick:function(){return D(!0)},className:"blue-button ml-2",children:"Export to Github"}),Object(s.jsx)("button",{onClick:function(){return window.print()},className:"blue-button ml-2",children:"Download report"})]}),Object(s.jsx)("div",{className:"left-column pt-3 scroll-pane",children:Object(s.jsx)(m.Survey,{json:r,onValueChanged:function(e,t){console.log("ValueChanged",e,t),y=e;var i=e.getAllQuestions(),s=new Map;i.forEach((function(e){e.isVisible||e.clearValue(),s.set(e.name,e.value)})),I([].concat(Object(c.a)(S),[s]))}})}),Object(s.jsx)("div",{className:"right-column scroll-pane",children:Object(s.jsx)("div",{className:"",children:Object(s.jsx)(k,{taskMap:q})})})]}),Object(s.jsx)(_,{taskMap:q,numTasks:R,showForm:N,hideForm:function(){return D(!1)}}),Object(s.jsxs)("div",{id:"footer",className:"footer",children:[Object(s.jsx)("span",{className:"mx-3",children:"Copyright \xa9 Microsoft Corporation"}),Object(s.jsx)("a",{style:{marginLeft:"auto",marginRight:"1em"},href:"mailto:aiguidelines@microsoft.com",children:"Contact us"})]})]})},D=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,92)).then((function(t){var i=t.getCLS,s=t.getFID,n=t.getFCP,a=t.getLCP,o=t.getTTFB;i(e),s(e),n(e),a(e),o(e)}))},M=i(47),q=i(50),E=i(16),P=i(9),H=i(10);var F=function(e){var t=e.name,i=e.examples,n=e.show,a=e.onClose,o=function(e){if(y){var t=y.getAllValues(),i=y.getFilteredProperties();return e.filter((function(e){var s;return new m.ConditionRunner(null!==(s=e.visibleIf)&&void 0!==s?s:"true").run(t,i)}))}return console.log("Could not filter examples because surveyModel is null"),e}(i);console.log("Filtered ".concat(o.length," visible examples out of ").concat(i.length," total examples for help=").concat(t));var r=null===o||void 0===o?void 0:o.map((function(e,t){return Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("h5",{children:e.name}),Object(s.jsx)("div",{dangerouslySetInnerHTML:{__html:e.details}}),t<o.length-1?Object(s.jsx)("hr",{style:{width:"100%",marginTop:"1.5em",marginBottom:"1.5em"}}):null]})}));return Object(s.jsx)(s.Fragment,{children:Object(s.jsxs)(S.a,{show:n,onHide:a,children:[Object(s.jsx)(S.a.Header,{closeButton:!0,children:Object(s.jsxs)(S.a.Title,{children:[t," examples"]})}),Object(s.jsx)(S.a.Body,{children:r}),Object(s.jsx)(S.a.Footer,{children:Object(s.jsx)("button",{className:"blue-button",onClick:a,children:"Close"})})]})})},Y=function(e){var t=e.name,i=e.definition,a=e.examples,o=Object(n.useState)(!1),r=Object(u.a)(o,2),l=r[0],c=r[1];return Object(s.jsxs)("div",{className:"radio-definition",children:[Object(s.jsx)("div",{className:"light-text",style:{display:"inline",fontSize:"0.85em",marginRight:"0.75em"},dangerouslySetInnerHTML:{__html:i}}),Object(s.jsx)(F,{name:t,examples:a,show:l,onClose:function(){return c(!1)}}),Object(s.jsx)(w.d,{color:"#00ECF2",style:{cursor:"pointer",marginTop:"-3px"},onClick:function(){return c(!0)}})]})},R=function(e){Object(P.a)(i,e);var t=Object(H.a)(i);function i(){return Object(p.a)(this,i),t.apply(this,arguments)}return Object(h.a)(i,[{key:"getItems",value:function(e){for(var t=this,n=Object(q.a)(Object(E.a)(i.prototype),"getItems",this).call(this,e),a=g.questions.find((function(e){return e.name===t.question.name})),o=this.question.visibleChoices.map((function(e){var t=a.choices.find((function(t){return t.name===e.value}));return null!=t?Object(s.jsx)(Y,{name:e.text,definition:t.definition,examples:t.examples},t.name+"__customradiogroup"):null})),r=Array(2*n.length),l=0;l<2*n.length;l++){var c=Math.floor(l/2);r[l]=l%2===0?n[c]:o[c]}return r}}]),i}(m.SurveyQuestionRadiogroup);m.ReactQuestionFactory.Instance.registerQuestion("radiogroup",(function(e){return a.a.createElement(R,e)})),r.a.render(Object(s.jsx)(a.a.StrictMode,{children:Object(s.jsx)(N,{surveyData:M,contentData:g})}),document.getElementById("root")),D()}},[[86,1,2]]]);
//# sourceMappingURL=main.fa1eb3d6.chunk.js.map