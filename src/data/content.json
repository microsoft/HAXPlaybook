{
  "surveyInstructions": {
    "title": "Describe your AI feature",
    "message": ""
  },
  "taskInstructions": {
    "title": "Recommended scenarios to test",
    "message": ""
  },
  "questions": [
    {
      "name": "systemDomain",
      "category": "Correct operation",
      "choices": [
        {
          "name": "search",
          "definition": "A search system locates items that correspond to user-specified keywords, phrases, or characters.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Search engines, such as Bing, generate matching results (e.g., movie title) along with contextually relevant information (e.g., show times) based on the user's current location and time. </li> <li>An in-app search feature, such as Microsoft Search in Office products, allows users to quickly find application-specific information, from commands or help to recently used files and more.</li> </ul>"
            }
          ],
          "taskCard": {
            "tasks": [
              {
                "name": "Normal operation",
                "details": "System demonstrates normal operation"
              }
            ]
          }
        },
        {
          "name": "recommendation",
          "definition": "A recommendation system makes preferred-content suggestions, sometimes by predicting the userâ€™s rating of the content.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Playlist generators for video and music services like Netflix, YouTube, and Spotify.</li> <li>Product recommender services, such as Amazon.</li> <li>Contextual assistant services such as, <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Meeting Insights by Microsoft Outlook is an intelligent assistant that suggests meeting related information, including content presented during the meeting, sent meeting notes, and other relevant post-meeting material.\">Meeting Insights</a></li> </ul>"
            }
          ],
          "taskCard": {
            "tasks": [
              {
                "name": "Normal operation",
                "details": "System demonstrates normal operation"
              }
            ]
          }
        },
        {
          "name": "conversational_ai",
          "definition": "Conversational agents interact with people through natural-language dialogue, using speech recognition, intent classification, and <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"slot filling extracts an entity's attribute values (e.g., car: make and model) from source documents\">slot filling</a>.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Voice assistants for productivity management or home automation, like Cortana, Siri, and Alexa. </li> <li>Chatbots for customer support in most e-commerce websites.</li> </ul>"
            }
          ],
          "taskCard": {
            "tasks": [
              {
                "name": "Normal operation",
                "details": "System demonstrates normal operation"
              }
            ]
          }
        },
        {
          "name": "text_prediction_and_assistance",
          "definition": "Text prediction and writing assistants help with the writing process, including research, grammar, tone, and localization.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Predicting the next set of words or action commands based on the user's input.</li> <li>Providing corrections for spelling, grammar, and punctuation mistakes.</li> <li>Making suggestions for similar words, paraphrases, and alternative expressions.</li> </ul>"
            }
          ],
          "taskCard": {
            "tasks": [
              {
                "name": "Normal operation",
                "details": "System demonstrates normal operation"
              }
            ]
          }
        },
        {
          "name": "classification",
          "definition": "Text or document classification categorizes text in groups organized by predefined labels.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Spam filters in email applications such as Microsoft Outlook.</li> <li>Scheduling assistants that detect meeting appointments based on the content of email.</li> </ul>"
            }
          ],
          "taskCard": {
            "tasks": [
              {
                "name": "Normal operation",
                "details": "System demonstrates normal operation"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "inputModality",
      "category": "Input errors",
      "choices": [
        {
          "name": "text",
          "definition": "Keystrokes or text-bearing documents can be considered text input.",
          "examples": [
            {
              "name": "",
              "details": "Search systems enable users to retrieve information by entering text queries."
            },
            {
              "name": "",
              "details": "<p>Recommender systems enable users to explore various content, products, or services that match their behavior or preferences by entering one or more keywords.</p> <ul> <li>Music playlist generators will ask onboarding users to select a few songs or genres to tailor recommendations.</li> <li>Fitness apps will ask onboarding users to answer questions about lifestyle and routine behavior to tailor recommendations.</li> </ul>"
            },
            {
              "name": "",
              "details": "Chatbots allow users to formulate their questions by entering text and retrieve relevant information."
            },
            {
              "name": "",
              "details": "Predictive text enables efficient use of keystrokes by suggesting a set or sequence of words, given some preceding text."
            },
            {
              "name": "",
              "details": "Spam filters allow email users to specify (via text) categories of email messages that they want to filter out from their inbox."
            }
          ],
          "taskCard": {
            "message": "Your system will take text as its primary input modality. Here are some scenarios that you can consider including in your user testing protocol.",
            "tasks": [
              {
                "name": "Spelling error results in wrong input",
                "details": "<p>Spelling mistakes are a common source of text input errors, including missing letters, accidental letter additions, or swapping and replacing letters. Here are some ways to simulate spelling errors:</p><ul> <li>Use a word scrambler to switch the position of any two adjacent letters.</li> <li>Use any of these four techniques to manipulate the user's utterance. <ul> <li><b>Truncation</b>: removing a vowel or consonant from a word (e.g., le<u>t</u>er instead of le<u>tt</u>er)</li> <li><b>Substitution</b>: replacing a vowel or consonant with another in their respective position in the word (e.g., fi<u>m</u>ite instead of fi<u>n</u>ite)</li> <li><b>Insertion</b>: adding an extra vowel or consonant to a word (e.g., mis<u>s</u>take instead of mistake)</li> <li><b>Swapping</b>: switching positions between two adjacent letters (e.g., rec<u>ie</u>ved instead of rec<u>ei</u>ved)</li> </ul> </li> </ul>"
              }
            ]
          }
        },
        {
          "name": "speech",
          "definition": "Speech input is widely used in conversational assistants like home automation systems or language-translation services.",
          "examples": [
            {
              "name": "",
              "details": "Search systems that are integrated into voice assistants enable users to retrieve information by entering speech queries."
            },
            {
              "name": "",
              "details": "<p>Recommender systems that are integrated into voice assistants enable users to explore relevant information by entering speech queries.</p> <ul> <li>Home-based voice assistants, such as Amazon Echo, provide recommendations for specific recipes based on the speech query, \"Show me recipes for pasta.\"</li> </ul>"
            },
            {
              "name": "",
              "details": "A voice assistant is a user interface that allows a user to complete an action or retrieve information simply by speaking a command."
            }
          ],
          "taskCard": {
            "message": "Your system will take <b>speech</b> as its primary input modality. Here are some scenarios that you can consider including in your user testing protocol.",
            "tasks": [
              {
                "name": "Speech recognition error results in wrong input",
                "details": "<p>Speech recognition is often a common source of error in technologies that rely on language intelligence. Here are some ways to simulate speech recognition errors:</p> <ul> <li>Use an automated speech-to-text transcriber to convert user's utterance to text.</li> <li>Use any of the four techniques to manipulate the user's utterance. <ul> <li><b>Truncation</b>: removing inflected endings (e.g., \"-ing\", \"-s\", \"-ed\") or articles (\"the\")</li> <li><b>Substitution</b>: replacing utterance with a homo-phone/-nym, or words that share the same pronunciation, regardless of spelling.</li> <li><b>Insertion</b>: adding inflected endings (e.g., \"-ing\", \"-s\", \"-ed\")</li> <li><b>Extension</b> Splitting inflected endings (\"-s\") from words (\"cats\") to add a new word (e.g., cat<u>s</u> -> cat <u>s</u>it)</li> </ul> </li> </ul>"
              },
              {
                "name": "System ignores speech input",
                "details": "<p>Speech recognizers can ignore a user's utterance due to a disruptive noise signal.</p> <p>Simulate this error by turning off audio-visual feedback that indicates proper input registration.</p>"
              },
              {
                "name": "System generates a non-response",
                "details": "<p>Speech recognizers can also fail to make sense of a user's utterance due to a disruptive noise signal.</p> <p>Simulate this error by providing feedback to the user that indicates the system has failed to register the user's input. For example, a system can respond with, \"Sorry, I did not hear what you said.\"</p>"
              }
            ]
          }
        },
        {
          "name": "action_sequence",
          "definition": "Action sequence is a predefined <a href=\"#\" class=\"toolTip\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Examples include clicking a button, opening an application, receiving an email, or any events that trigger a systemâ€™s intelligent feature, initiated either by user or system\">event</a>.",
          "examples": [
            {
              "name": "",
              "details": "<a href=\"#\" class=\"toolTip\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Example playlist generators include YouTube, Netflix, or Spotify\">Playlist generators</a> rely on content that the user is currently playing or a history of accessed content to recommend new content that matches their preference."
            },
            {
              "name": "",
              "details": "Switching between a specific set of applications or closing an application can be classified as unique action sequences that inform ways to trigger an intelligent feature."
            }
          ],
          "taskCard": {
            "message": "Your system will take <b>action sequence</b> as its primary input modality. Here are some scenarios that you can consider including in your user testing protocol.",
            "tasks": [
              {
                "name": "System ignores correct action sequence",
                "details": "<p>Your system could potentially ignore a correct signal when it classifies a correct action sequence as being incorrect. This is also known as a false negative.</p> <p>Simulate this error by turning off audio-visual feedback that indicates proper input registration."
              },
              {
                "name": "System registers incorrect action sequence",
                "details": "<p>Your system could also classify an incorrect action sequence as being correct. This is also known as a false positive.</p> <p>Simulate this error by designating an incorrect action sequence, then turning on system audio-visual feedback when a user performs the incorrect action sequence. </p>"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "trigger",
      "category": "Trigger errors",
      "choices": [
        {
          "name": "yes",
          "definition": "Your system wonâ€™t encounter errors if it has a clear way of knowing when to trigger.",
          "examples": [
            {
              "name": "",
              "details": "Text-based systems will typically know to trigger when the user has started entering or selecting text."
            },
            {
              "name": "",
              "details": "<p>Speech-based systems will typically know when to begin listening to the user through its wake-word invocation method. Example wake words include:</p> <ul> <li>\"Hey Cortana,\" by Microsoft Cortana</li> <li>\"Alexa,\" by Amazon Echo</li> <li>\"Ok Google,\" by Google Home</li> </ul>"
            },
            {
              "name": "",
              "details": "<p>Systems that rely on action sequence will typically know to trigger when the user or system has initiated an action. Some of these actions include:</p> <ul> <li>Switching between different screens or applications.</li> <li>Using geofencing to trigger a reminder for buying groceries.</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "",
            "tasks": []
          }
        },
        {
          "name": "no",
          "definition": "Your system will have difficulty knowing when to trigger if it has to rely on loosely defined user utterances or action sequences.",
          "examples": [
            {
              "name": "",
              "details": "Speech-based systems that do not rely on an explicit invocation method may have difficulty knowing when to trigger. For example, multiple people with similar voice profiles could unintentionally trigger the system."
            },
            {
              "name": "",
              "details": "Systems that take action sequence as primary input will sometimes have difficulty knowing when to trigger if it's unclear whether a predefined action sequence took place."
            }
          ],
          "taskCard": {
            "message": "<p>Any uncertainty in knowing when to invoke the intelligent feature can sometimes result in triggering wrongfully, or triggering the system too early or too often.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System triggers too early",
                "details": "<p>Your system can trigger too early when it has a problem perceiving an input signal.</p> <p>Simulate this error by artificially inserting a short time span between the user's input and system feedback.</p> <ol> <li>Choose a short time span (e.g., 1 to 2 seconds) between the beginning of the user's input and system feedback that indicates receipt of input.</li> <li>Use this time span as a condition to trigger system feedback.</li> </ol>"
              },
              {
                "name": "System triggers too often",
                "details": "<p>Your system can trigger too often when it has a problem perceiving an input signal.</p> <p>Simulate this error by repetitively triggering system feedback after every keystroke, audio signal, or action upon user input.</p>"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "delimiter",
      "instruction": "When the system begins the activation process, it will also need to have a clear way of <a href=\"#\" class=\"toolTip\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"A delimiter is a sequence of one or more characters or events for specifying when a system should finish receiving the user's input.\">delimiting</a> the user's input. Select a response to see more information.",
      "category": "Delimiter errors",
      "choices": [
        {
          "name": "yes",
          "definition": "Your system will not encounter any errors if it has a clear way of <a href=\"#\" class=\"toolTip\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"A delimiter is a sequence of one or more characters or events for specifying when a system should finish receiving the user's input.\">delimiting</a> the user's input.",
          "examples": [
            {
              "name": "",
              "details": "<p>In text-based systems, an example of a delimiter is punctuation characters, which act as separators for distinct ideas. A delimiter may also be a group of characters or words.</p>"
            },
            {
              "name": "",
              "details": "<p>Systems that rely on action sequences usually have a clear way of knowing when to delimit the user's input. Example action sequences that are clearly delimited include:</p> <ul> <li>Hovering over a text for 2 seconds</li> <li>Releasing a button press after 5 seconds</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "",
            "tasks": []
          }
        },
        {
          "name": "no",
          "definition": "Your system might be relying on loosely defined user utterances or action sequences.",
          "examples": [
            {
              "name": "",
              "details": "<p>In text-based systems, this could happen when there is uncertainty in determining whether the formulated utterance is semantically or grammatically complete. Your system might have difficulty delimiting the user's input in the following example:</p> <ul> <li>How is the weather?</li> <li>How is the weather <b>in Redmond, Seattle</b>?</li> </ul>"
            },
            {
              "name": "",
              "details": "<p>In speech-based systems, an example of a delimiter is a momentary pause after an utterance or a change in intonation.</p> <p>There is also uncertainty in determining whether the spoken utterance is semantically or grammatically complete. Your system might have difficulty delimiting the user's input in the following example:</p> <ul> <li>How is the weather [pause] <b>in Redmond, Seattle</b>?</li> </ul>"
            },
            {
              "name": "",
              "details": "<p>Writing assistants might rely on underspecified rules for delimiting user input, such as phrasal expressions or whole sentences, to support a natural, uninterrupted writing experience. Your system might have difficulty delimiting the user's input in the following example:</p> <ul> <li>Students should follow...</li> <li>Students should follow <b>these guidelines</b>...</li> <li>Students should follow <b>up with their mentors</b>...</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "<p>Your system will likely produce errors when there is uncertainty in determining when the user's input has ended.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System triggers too late",
                "details": "<p>Your system can trigger too late when it has a problem perceiving when the user's input signal has ended.</p> <p>Simulate this error by artificially inserting a lag between the user's input and system feedback.</p> <ol> <li>Choose a considerably long time span (e.g., 10 seconds) between the beginning of the user's input and system feedback that indicates receipt of input.</li> <li>Use this time span as a condition to trigger system feedback.</li> <li>(Optional) Display continuous system feedback (e.g., revolving light ring) to indicate that the system is still receiving user input.</li> </ol>"
              },
              {
                "name": "System triggers based on incomplete input signal",
                "details": "<p>Your system might trigger based on an incomplete input signal.</p> <p>Simulate this error by removing parts of input.</p> <ol> <li>Choose a considerably long time span (e.g., 10 seconds) between the beginning of the user's input and system feedback that indicates receipt of input.</li> <li>Use this time span as a condition to trigger system feedback.</li> <li>(Speech only) Use a speech-to-text transcriber to convert user's spoken utterances into text. <li>(Text and speech only) Remove the last one or two words from the text utterance.</li> </ol>"
              },
              {
                "name": "System ignores user input after delayed time",
                "details": "<p>Although it may have no problem trigger, your system could potentially ignore a user input after a passage of time.</p> <p>Simulate this error by turning off any audio or visual feedback.</p> <ol> <li>Set up a long time delay (e.g., 10 seconds) between the beginning of the user's input and system feedback that indicates receipt of input.</li> <li>(Optional) Consider displaying continuous system feedback (e.g., revolving light ring) to indicate that the system is still receiving user input.</li> <li>Turn off system feedback when the set time threshold has passed.</li> </ol>"
              },
              {
                "name": "System generates a non-response",
                "details": "<p>Your system could also generate a non-response after some passage of time.</p> <p>Simulate this error by inserting audio or visual feedback.</p> <ol> <li>Set up a long time delay (e.g., 10 seconds) between the beginning of the user's input and system feedback that indicates receipt of input.</li> <li>(Optional) Consider displaying continuous system feedback (e.g., revolving light ring) to indicate that the system is still receiving user input.</li> <li>Turn off system feedback once the set time threshold has passed.</li> <li>Provide system feedback to the user that indicates the system has failed to register the user's input. For example, a system can respond with, \"Sorry, I'm having trouble processing your request. Please try again.\"</li> </ol>"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "interpretation",
      "category": "Response generation errors",
      "choices": [
        {
          "name": "yes",
          "definition": "Multiple interpretations can exist when there is no clear signal to help the system disambiguate similar or identical input of text, speech utterance, or action sequence.",
          "examples": [
            {
              "name": "",
              "details": "<p>In text-based systems, multiple interpretations of the same word can happen in the following ways:</p> <ul> <li><u>Ontario</u>, province of Canada; or <u>Ontario</u>, city in the state of California.</li> <li><u>May</u>, the fifth month of the year; or <u>may</u>, a verb used to express possibility.</li> </ul>"
            },
            {
              "name": "",
              "details": "<p>In speech-based systems, multiple interpretations of similar-sounding speech utterances can happen in the following ways:</p> <ul> <li>Interpreting <u>whether</u> as <u>weather</u>.</li> <li>Interpreting <u>palate</u> as <u>palette</u>, or <u>pallet</u>.</li> </ul>"
            },
            {
              "name": "",
              "details": "<ul> <li>Skipping two songs in a playlist in order to listen to the third song.</li> <li>Skipping two songs in a playlist in order to see different recommendations for songs.</li> </ul>"
            },
            {
              "name": "",
              "details": "<p>Multiple interpretations of the same email message can happen when certain details of the email are underspecified.</p> <ul> <li>Meeting request <u>on the weekend</u> as beginning on Friday, Saturday, or Sunday.</li> <li>Meeting request for <u>next month</u> as exactly 29 days, 23 hours, 59 minutes, and 59 seconds from the current time.</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "<p>Your system expects <b>multiple valid interpretations</b> of an input signal.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System correctly interprets intent, but ignores provided details",
                "details": "<p>While your system has the correct interpretation of an intent, it could potentially ignore important details such as the date/time or a person's name.</p> <p>Simulate this error by removing a component from the input.</p> <ol> <li>Choose a certain detail or component of an input signal that you want your system to ignore.</li> <li>Attach a unique identifier to the detail or property of an input signal.</li> <li>Use the identifier to consistently remove said component upon receiving the user's input.</li> <li>(Optional) Use a randomizer to remove the component at a variable rate or a fixed rate that you specify.</li> </ol>"
              },
              {
                "name": "System correctly interprets intent, but adds a new detail",
                "details": "<p>Although your system has the correct interpretation of an intent, it could potentially add new details or components that were not part of the original input.</p> <p>Simulate this error by inserting a component to the input.</p> <ol> <li>Choose a certain detail or component that you want your system to add to an input.</li> <li>Insert the component to the input.</li> <li>(Optional) Use a randomizer to insert the component at a variable rate or a fixed rate that you specify.</li> </ol>"
              },
              {
                "name": "System correctly interprets intent, but incorrectly resolves provided details",
                "details": "<p>While your system has the correct interpretation of an intent, it could potentially incorrectly resolve details or assign incorrect attributes (e.g., wrong time zone) to a certain component (e.g., time) of the input.</p> <p>Simulate this error by replacing a default attribute (e.g., Pacific Standard Time) that is originally assigned to the component (e.g., 1:00 p.m.) that you specify.</p> <ol> <li>Choose a certain component that you want your system to manipulate.</li> <li>Attach a unique identifier to the component of an input signal.</li> <li>Use the identifier to replace a default attribute that is assigned to the component.</li> <li>(Optional) Use a randomizer to replace a default attribute at a variable rate or a fixed rate that you specify.</li> </ol>"
              },
              {
                "name": "System fails to interpret intent from input",
                "details": "<p>Your system could fail to interpret an intent from the user's input.</p> <p>Simulate this error using a language translator.</p> <ol> <li>[Speech] If your system uses speech as the primary input, use a speech-to-text transcriber to convert the spoken utterance to text.</li> <li>Repeat rounds of translations between the text input and any other language (e.g., German).</li> </ol>"
              }
            ]
          }
        },
        {
          "name": "no",
          "definition": "Your system won't encounter any errors if there's only one valid interpretation of the user's input.",
          "examples": [
            {
              "name": "",
              "details": "<p>Formulating highly specific queries can lead to very few or only one valid interpretation(s) of the user's input. The query in the following example would result in only one valid interpretation because the day, time, and location is specified:</p> <ul> <li>How is the weather <u>tomorrow</u> in <u>Seattle, Washington</u> from <u>1 to 2pm</u>?</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "",
            "tasks": []
          }
        }
      ]
    },
    {
      "name": "responseType",
      "category": "Response generation errors",
      "choices": [
        {
          "name": "single_response",
          "definition": "Your system will produce a single response if only one valid response is available, or if time-, screen-, or usability-related constraints allow for only one.",
          "examples": [
            {
              "name": "",
              "details": "Advanced chatbot systems can generate short blurbs of text in interactive conversations by building on the tone and relevant topics that are detected from user utterances."
            },
            {
              "name": "",
              "details": "<p>A single response to a question related to weather might include:</p> <ul> <li>It is 81 degrees Fahrenheit.</li> </ul>"
            },
            {
              "name": "",
              "details": "Advanced writing assistants often generate a single response to suggest a paraphrase or sentence that eliminates a grammatical error or redundant information."
            }
          ],
          "taskCard": {
            "message": "<p>Your system will generate a <b>single response</b>. Systems that rely on automatic response generation could produce a factually incorrect response, incoherent response, or partially correct response.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System generates an irrelevant response",
                "details": "<p>Your system could generate a topically irrelevant response given a user input.</p> <p>Simulate this error by using a machine translator to paraphrase the target response string to one that has lowest relevance.</p>"
              },
              {
                "name": "System generates a factually incorrect response",
                "details": "<p>Your system can generate a factually incorrect response.</p> <p>Simulate this error in the following manner:</p> <ul> <li>Negate a recent user interaction or user-generated utterance.</li> <li>Insert a fabricated user interaction or user-generated utterance.</li> </ul>"
              },
              {
                "name": "System generates an incoherent response",
                "details": "<p>Your system could generate an incoherent response when it relies on an imperfect topic model. </p> <p>Simulate this error in the following manner:</p> <ol> <li>Use a topic modeler to capture candidate topics that are inherent in the generated response.</li> <li>Among the identified topics, choose and replace a topic with one that has lowest relevance to the target topic.</li> <li>Use the revised topic model to generate a response</li> </ol>"
              },
              {
                "name": "System generates a partially correct response",
                "details": "<p>Your system could generate a partially correct response when it is missing key information for the generated response.</p> <p>Simulate this error in the following manner:</p> <ol> <li>Identify a part of speech (e.g., noun, verb or object) that you want to manipulate.</li> <li>Remove the identified word.</li> </ol>"
              },
              {
                "name": "System fails to generate a valid response",
                "details": "<p>Your system could fail to formulate a valid response.</p> <p>Simulate this error by removing all words from the target response string except for certain parts of speech, such as pronouns, conjunctions, or articles.</p>"
              },
              {
                "name": "System generates a non-response",
                "details": "<p>Your system could also generate a non-response.</p> <p>Simulate this error by providing feedback that suggests failure to generate a valid response. For example, your system can display or read the following message. \"Sorry, I cannot answer your question at this time.\"</p>"
              }
            ]
          }
        },
        {
          "name": "ranked_list",
          "definition": "Your system will produce a ranked list in order of contextual relevance to user needs if multiple valid responses are available.",
          "examples": []
        },
        {
          "name": "action_execution",
          "definition": "Performing an action is a common response type for systems that generate nonverbal cues",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Displaying a screen or opening a new application.</li> <li>Performing physical actions, such as emitting light or vibrotactile feedback.</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "<p>Your system will perform an <b>action execution</b>. Failure to understand the user's intent or context can result in precision or recall errors in the context of performing an action execution. </p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System performs an incorrect action",
                "details": "<p>Your system could execute an incorrect action when there are multiple ways of executing the action.</p> <p>Simulate this error in the following two ways:</p> <ul> <li>Perform an action that does not match the action in the query.</li> <li>Perform the intended action from a connected application that was not intended.</li> </ul>"
              },
              {
                "name": "System fails to perform any action",
                "details": "<p>Your system could also not perform an action at all.</p> <p>Simulate this error by turning off any system feedback.</p>"
              },
              {
                "name": "System generates a non-response",
                "details": "<p>Your system could also not perform an action at all and generate a non-response.</p> <p>Simulate this error by generating a system feedback in the following ways:</p> <ul> <li>Display continuous audio or visual feedback for a certain period that indicates the system is prepared to generate a response.</li> <li>Respond with text or speech, \"Sorry, I cannot complete your request at this time.\"</li> </ul>"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "responseMechanism",
      "category": "Response generation errors",
      "choices": [
        {
          "name": "generated",
          "definition": "Automated response generation transforms structured data into natural language to generate new content.",
          "examples": [
            {
              "name": "",
              "details": "Email reply prediction systems use automated response generation to suggest a list of phrases that the user can use to begin composing a reply email."
            }
          ],
          "taskCard": {
            "message": "<p>Your system will <b>generate</b> a ranked list. List items can be automatically generated (instead of selected) and presented in ranked order. However, failure to understand user's intent or context can result in precision, recall, and ranking errors.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System generates poorly ranked list",
                "details": "<p>Your system could fail to generate a properly ranked list due to ranking errors.</p> <p>Simulate this error in the following two ways:</p> <ul> <li>Replace key ranked items from the list with irrelevant items.</li> <li>Shuffle or randomize key ranked items from list.</li> </ul>"
              },
              {
                "name": "System fails to generate list item(s)",
                "details": "<p>Your system could fail to generate individual or multiple list items due to precision and recall errors.</p> <p>Simulate this error by removing a list item or replace a prepopulated string with an empty value.</p>"
              },
              {
                "name": "System generates a list with reduced diversity",
                "details": "<p>Your system could generate a list with redundant items if it fails to account for the diversity of list items.</p> <p>Simulate this error in the following ways:</p> <ul> <li>Insert a duplicate item to the list.</li> <li>Add or remove inflected endings (e.g., \"-ing\", \"-s\", \"-ed\") to the duplicate item.</li> <li>Add or remove articles (e.g., \"an\", \"the\") to and from a list item</li> </ul>"
              },
              {
                "name": "System does not generate a valid response",
                "details": "<p>Your system could also generate a non-response.</p> <p>Simulate this error in following ways:</p> <ul> <li>Replace a single item with a string that does not have any meaningful value (e.g., \"null\") </li> <li>Display a system feedback that replaces the entire list, saying \"Sorry your requested information is not available at this time.\"</li> </ul>"
              }
            ]
          }
        },
        {
          "name": "selected",
          "definition": "Response selection from a list of candidate responses is suited for applications that rely on content from a database with minimal or no modifications applied to the response.",
          "examples": [
            {
              "name": "",
              "details": "<ul> <li>Search engine results comprise a list of several web pages in the order of a predetermined ranked index.</li> <li>In-app search results, such as files, commands, or help documentation, are listed in order of recency or transitional probability.</li> </ul>"
            },
            {
              "name": "",
              "details": "<ul> <li>List of recommended products in e-commerce websites are ranked in order of conditional probability that a user will purchase an item.</li> <li>List of recommended music or video content in playlist generators are ranked in order of likelihood that a user will consume the content.</li> </ul>"
            },
            {
              "name": "",
              "details": "<ul> <li>Customer support for e-commerce websites, in which users are provided multiple options to return or exchange a purchased item.</li> <li>Navigating insurance policy quotes, in which users are provided several different pricing options based on insurance coverage and deductibles.</li> </ul>"
            },
            {
              "name": "",
              "details": "<ul> <li>Predictive text suggests a set of words that the user will type with high probability, given some preceding text.</li> <li>Spell checkers suggest a list of correctly spelled words that are closest to the one that is intended in writing.</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "<p>Your system will <b>select</b> list items from an existing set. However, failure to understand user's intent or context can result in precision, recall, and ranking errors.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System generates poorly ranked list",
                "details": "<p>Failure to understand user's intent or context can result in precision, recall, and ranking errors.</p> <p>Simulate this error in the following two ways:</p> <ul> <li>Replace key ranked items from the list with irrelevant items.</li> <li>Shuffle or randomize key ranked items from list.</li> </ul>"
              },
              {
                "name": "System fails to populate list item(s)",
                "details": "<p>Your system could fail to populate individual or multiple list items due to precision and recall errors.</p> <p>Simulate this error in the following ways:</p> <ul> <li>Remove an item from the list.</li> <li>Replace a prepopulated string with an empty value.</li> <li>If your list item is selected from an external source, shift the string value by one or two words to the left or right of the target string.</li> </ul>"
              },
              {
                "name": "System creates a list with reduced diversity",
                "details": "<p>Your list can sometimes contain redundant items if it fails to account for the diversity of list items.</p> <p>Simulate this error in the following ways:</p> <ul> <li>Insert a duplicate item to the list.</li> <li>Add or remove inflected endings (e.g., \"-ing\", \"-s\", \"-ed\") to a duplicate item.</li> <li>Add or remove articles (e.g., \"an\", \"the\") to and from a list item.</li> </ul>"
              },
              {
                "name": "System does not generate a valid response",
                "details": "<p>Your system could also generate a non-response.</p> <p>Simulate this error in following ways:</p> <ul> <li>Replace a single item with a string that does not have any meaningful value (e.g., \"null\"). </li> <li>Display a system feedback that replaces the entire list, saying \"Sorry, your requested information is not available at this time.\"</li> </ul>"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "responseClassification",
      "category": "Response generation errors",
      "choices": [
        {
          "name": "binary",
          "definition": "Binary classification is the task of classifying datapoints of a given set into two categories.",
          "examples": [
            {
              "name": "",
              "details": "Email spam filters apply binary classification rules to determine whether to label an email as junk."
            }
          ],
          "taskCard": {
            "message": "<p>Your system will perform a <b>binary</b> classification.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System produces a false negative.",
                "details": "<p>False negatives comprise one outcome of a binary classification task.</p> <p>Simulate this error by assigning a negative label (e.g., not a meeting request) to a data point when it should been positive (e.g., meeting request).</p>"
              },
              {
                "name": "System produces a false positive",
                "details": "<p>False positives comprise another outcome of a binary classification task.</p> <p>Simulate this error by assigning a positive label (e.g., meeting request) to a data point when it should been negative (e.g., not a meeting request).</p>"
              }
            ]
          }
        },
        {
          "name": "multiple",
          "definition": "Multi-class is the task of classifying datapoints into one of three or more categories.",
          "examples": [
            {
              "name": "Multi-class classification",
              "details": "Multi-class is the task of classifying datapoints into one of three or more categories."
            },
            {
              "name": "Example",
              "details": "<p>Scheduling assistants apply multi-classification rules to label incoming email based on its content. Some of these multi-class categories include:</p> <ul> <li>Meeting requests</li> <li>Important messages</li> <li>Confidential messages</li> </ul>"
            }
          ],
          "taskCard": {
            "message": "<p>Your system will perform a <b>multi-class</b> classification.</p> <p>Here are some scenarios that you can consider including in your user testing protocol.</p>",
            "tasks": [
              {
                "name": "System fails to produce correct classifications among close categories",
                "details": "<p>Your system could potentially confuse two similar but different categories, leading to a classification error.</p> <p>Simulate this error in the following ways:</p> <ol> <li>Identify two or more data points that share similar features (e.g., meeting summary vs. meeting request).</li> <li>Assign same classification to those data points.</li> </ol>"
              },
              {
                "name": "System fails to produce correct classifications among distant categories",
                "details": "<p>Your system could also confuse two distant categories.</p> <p>Simulate this error in the following ways:</p> <ol> <li>Identify two or more data points that share minimal features (e.g., To-do list vs. meeting request).</li> <li>Assign same classification to those data points.</li> </ol>"
              }
            ]
          }
        }
      ]
    }
  ]
}